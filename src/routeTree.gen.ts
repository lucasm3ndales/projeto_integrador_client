/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as ModuleImport } from './routes/module'
import { Route as ServantImport } from './routes/_servant'
import { Route as IndexImport } from './routes/index'
import { Route as ServantServantImport } from './routes/_servant/servant'
import { Route as ServantExpenseImport } from './routes/_servant/expense'
import { Route as ServantEventImport } from './routes/_servant/event'
import { Route as ServantDepartamentImport } from './routes/_servant/departament'

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const ModuleRoute = ModuleImport.update({
  path: '/module',
  getParentRoute: () => rootRoute,
} as any)

const ServantRoute = ServantImport.update({
  id: '/_servant',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ServantServantRoute = ServantServantImport.update({
  path: '/servant',
  getParentRoute: () => ServantRoute,
} as any)

const ServantExpenseRoute = ServantExpenseImport.update({
  path: '/expense',
  getParentRoute: () => ServantRoute,
} as any)

const ServantEventRoute = ServantEventImport.update({
  path: '/event',
  getParentRoute: () => ServantRoute,
} as any)

const ServantDepartamentRoute = ServantDepartamentImport.update({
  path: '/departament',
  getParentRoute: () => ServantRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_servant': {
      preLoaderRoute: typeof ServantImport
      parentRoute: typeof rootRoute
    }
    '/module': {
      preLoaderRoute: typeof ModuleImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/_servant/departament': {
      preLoaderRoute: typeof ServantDepartamentImport
      parentRoute: typeof ServantImport
    }
    '/_servant/event': {
      preLoaderRoute: typeof ServantEventImport
      parentRoute: typeof ServantImport
    }
    '/_servant/expense': {
      preLoaderRoute: typeof ServantExpenseImport
      parentRoute: typeof ServantImport
    }
    '/_servant/servant': {
      preLoaderRoute: typeof ServantServantImport
      parentRoute: typeof ServantImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  ServantRoute.addChildren([
    ServantDepartamentRoute,
    ServantEventRoute,
    ServantExpenseRoute,
    ServantServantRoute,
  ]),
  ModuleRoute,
  RegisterRoute,
])

/* prettier-ignore-end */
